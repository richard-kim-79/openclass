version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    ports:
      - "5001:5001"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - CLOUDINARY_CLOUD_NAME=${CLOUDINARY_CLOUD_NAME}
      - CLOUDINARY_API_KEY=${CLOUDINARY_API_KEY}
      - CLOUDINARY_API_SECRET=${CLOUDINARY_API_SECRET}
    depends_on:
      - postgres
    networks:
      - openclass-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:5001
      - NEXT_PUBLIC_SOCKET_URL=http://backend:5001
    depends_on:
      - backend
    networks:
      - openclass-network

  postgres:
    image: pgvector/pgvector:pg15
    environment:
      - POSTGRES_DB=openclass
      - POSTGRES_USER=openclass
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    command: postgres -c shared_preload_libraries=vector
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - openclass-network

volumes:
  postgres_data:

networks:
  openclass-network:
    driver: bridge
